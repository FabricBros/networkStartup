#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

volumes:
  orderer0.example.com:
  orderer1.example.com:
  peer0.org1.example.com:
  peer1.org1.example.com:
  peer0.org2.example.com:
  peer1.org2.example.com:

networks:
  fabricbros:

services:
  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    environment:
      - GOPATH=/opt/gopath
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    working_dir:  /opt/gopath/src/chaincodedev
    command: /bin/bash -c 'sleep 60000'
    volumes:
        - /var/run/:/host/var/run/
        - ${MHC_FABRIC_CCROOT}:/opt/gopath/src/chaincode
        - ./crypto/${FAB_CONFIG_GEN_VERS}/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./:/opt/gopath/src/chaincodedev/
        - ${GOPATH}:/opt/gopath
    networks:
      - fabricbros

  zookeeper0:
    container_name: zookeeper0
    extends:
      service: zookeeper
      file: base/docker-compose-base.yaml
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - fabricbros

  zookeeper1:
    container_name: zookeeper1
    extends:
      service: zookeeper
      file: base/docker-compose-base.yaml
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - fabricbros

  zookeeper2:
    container_name: zookeeper2
    extends:
      service: zookeeper
      file: base/docker-compose-base.yaml
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888
    networks:
      - fabricbros

  kafka0:
    container_name: kafka0
    extends:
      service: kafka
      file: base/docker-compose-base.yaml
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3 #TODO
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - fabricbros

  kafka1:
    container_name: kafka1
    extends:
      service: kafka
      file: base/docker-compose-base.yaml
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3 #TODO
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - fabricbros

  kafka2:
    container_name: kafka2
    extends:
      service: kafka
      file: base/docker-compose-base.yaml
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3 #TODO
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - fabricbros

  kafka3:
    container_name: kafka3
    extends:
      service: kafka
      file: base/docker-compose-base.yaml
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3 #TODO
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
    networks:
      - fabricbros

#
#  postgresql:
#    image: postgres:10.4
#    container_name: postgresql
#    restart: always
#    ports:
#      - 5432:5432
#    networks:
#      - fabricbros
#    volumes:
#      - ./postgres_explorer/init_script/:/docker-entrypoint-initdb.d/
#    depends_on:
#      - cli
#
#  bcexplorer:
#    image: huytran88/bc-explorer:latest
#    container_name: bc-explorer
#    depends_on:
#      - postgresql
#    volumes:
#      - ./crypto/:/opt/usr/fabric/crypto
#      - ${HLBC}:/opt/usr/fabric/bin
#    command: ["./wait-for-postgres.sh","postgresql","npm", "start"]
#    ports:
#      - ${BC_EXPLORER_PORT}:8080
#    networks:
#      - fabricbros

#  initChannel:
#    container_name: initChannel
#    image: hyperledger/fabric-tools${IMAGE_TAG_FABRIC}
#    environment:
#      - GOPATH=/opt/gopath
#      - CORE_PEER_ID=peer0.org1.example.com
#      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
#      - CORE_PEER_LOCALMSPID=Org1MSP
#      - CORE_PEER_TLS_ENABLED=false
#      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/orderer0.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
#      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
#
##      - CORE_PEER_LOCALMSPID=OrdererMSP
##      - CORE_PEER_TLS_ENABLED=false
##      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/orderer0.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
##      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/users/Admin@example.com/msp
#    working_dir:  /opt/gopath/src/chaincodedev
#    command: /bin/bash -c 'sleep 30 && ./scripts/initChannels.sh'
#    volumes:
#        - /var/run/:/host/var/run/
#        - ./crypto/${FAB_CONFIG_GEN_VERS}/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
#        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
#        - ./:/opt/gopath/src/chaincodedev/
#        - ${GOPATH}:/opt/gopath
#    depends_on:
#      - orderer0.example.com
#      - orderer1.example.com
#      - peer0.org1.example.com
#      - peer1.org1.example.com
#      - peer0.org2.example.com
#      - peer1.org2.example.com
#    networks:
#      - fabricbros
#

#  chaincode:
#    container_name: chaincode
#    image: hyperledger/fabric-ccenv:${IMAGE_TAG_FABRIC}
#    tty: true
#    environment:
#      - GOPATH=/opt/gopath
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      - CORE_LOGGING_LEVEL=DEBUG
#      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
#      - CORE_CHAINCODE_LOGGING_SHIM=DEBUG
#      - CORE_PEER_ID=peer0.org1.example.com
#      - CORE_PEER_ADDRESS=peer0.org1.example.com:7052 # maybe 127.0.0.1:7052
#      - CORE_PEER_LOCALMSPID=DEFAULT
#      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp
#    working_dir: /opt/gopath/src/chaincode
#    command: /bin/bash -c 'sleep 60000'
#    volumes:
#        - /var/run/:/host/var/run
#        - ./../crypto/${FAB_CONFIG_GEN_VERS}/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peer:ro
#        - ${MHC_FABRIC_CCROOT}:/opt/gopath/src/chaincode
#        #MODIFY THIS
#    depends_on:
#      - orderer.example.com
#      - peer0.org1.example.com

##################################################################
##################################################################TODO the ca will need to be modified when new certs are generated
  ca0:
    image: hyperledger/fabric-ca${IMAGE_TAG_FABRIC_CA}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -n ca0 --registry.maxenrollments -1 --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/*_sk -b admin:adminpw ${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_CA_TLS} --tls.certfile /etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem --tls.keyfile /etc/hyperledger/fabric-ca-server-config/*_sk -d'

    volumes:
      - ./crypto/${FAB_CONFIG_GEN_VERS}/crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config:ro
    container_name: capeerOrg1
    networks:
      - fabricbros
##################################################################
##################################################################
  ca1:
    image: hyperledger/fabric-ca${IMAGE_TAG_FABRIC_CA}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -n ca1 --registry.maxenrollments -1 --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/*_sk -b admin:adminpw ${ORG_HYPERLEDGER_FABRIC_SDKTEST_INTEGRATIONTESTS_CA_TLS} --tls.certfile /etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem --tls.keyfile /etc/hyperledger/fabric-ca-server-config/*_sk -d'

    volumes:
      - ./crypto/${FAB_CONFIG_GEN_VERS}/crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config:ro
    container_name: capeerOrg2
    networks:
      - fabricbros

##################################################################
##################################################################
  orderer0.example.com:
    extends:
      file: base/docker-compose-base.yaml
      service: orderer0.example.com
    container_name: orderer0.example.com
    networks:
      - fabricbros
##################################################################
##################################################################
  orderer1.example.com:
    extends:
      file: base/docker-compose-base.yaml
      service: orderer1.example.com
    container_name: orderer1.example.com
    networks:
      - fabricbros

##################################################################
##################################################################
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.example.com
    networks:
      - fabricbros
    depends_on:
          - orderer0.example.com
          - orderer1.example.com
#################################################################
#################################################################
  peer1.org1.example.com:
    container_name: peer1.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.org1.example.com
    networks:
      - fabricbros
    depends_on:
          - orderer0.example.com
          - orderer1.example.com
          - peer0.org1.example.com
#################################################################
#################################################################
  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org2.example.com
    networks:
      - fabricbros
    depends_on:
          - orderer0.example.com
          - orderer1.example.com
#################################################################
#################################################################
  peer1.org2.example.com:
    container_name: peer1.org2.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.org2.example.com
    networks:
      - fabricbros
    depends_on:
          - orderer0.example.com
          - orderer1.example.com
          - peer0.org2.example.com
#################################################################
#################################################################
  configtxlator:
      image: hyperledger/fabric-tools${IMAGE_TAG_FABRIC}
      ports:
        - "7059:7059"
      command: /usr/local/bin/configtxlator start
      container_name: configtxlator
      networks:
        - fabricbros
##################################################################
##################################################################
#  ccenv:
#    image: hyperledger/fabric-ccenv${IMAGE_TAG_FABRIC}
